{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMhnAkMYgpMzWQRCq03Qs/1",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/2303A51683/ADM-LAB/blob/main/LAB-4\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "data = {'Color': ['Red', 'Blue', 'Green', 'Blue', 'Red']}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "df_encoded = pd.get_dummies(df, columns=['Color'])\n",
        "print(df_encoded)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_e2A7-HfXuHE",
        "outputId": "92bc2a42-2586-4bd6-d6c0-23cbb9a99d54"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Color_Blue  Color_Green  Color_Red\n",
            "0       False        False       True\n",
            "1        True        False      False\n",
            "2       False         True      False\n",
            "3        True        False      False\n",
            "4       False        False       True\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "\n",
        "data = {'Color': ['Red', 'Blue', 'Green', 'Blue', 'Red']}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "label_encoder = LabelEncoder()\n",
        "df['Color_encoded'] = label_encoder.fit_transform(df['Color'])\n",
        "print(df)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tRiBkeTdXuPM",
        "outputId": "5453f4f0-883c-412b-821c-1d9248d33ae8"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Color  Color_encoded\n",
            "0    Red              2\n",
            "1   Blue              0\n",
            "2  Green              1\n",
            "3   Blue              0\n",
            "4    Red              2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from datetime import datetime\n",
        "\n",
        "data = {'Name': ['Alice', 'Bob', 'Charlie'],\n",
        "        'Date_of_Birth': ['2000-05-10', '1995-07-20', '1980-10-05']}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "df['Date_of_Birth'] = pd.to_datetime(df['Date_of_Birth'])\n",
        "\n",
        "current_year = datetime.now().year\n",
        "df['Age'] = current_year - df['Date_of_Birth'].dt.year\n",
        "print(df)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t8Hb5Fn_XuWM",
        "outputId": "3fe0d67f-ac72-4498-e864-eecbcfcb565a"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "      Name Date_of_Birth  Age\n",
            "0    Alice    2000-05-10   25\n",
            "1      Bob    1995-07-20   30\n",
            "2  Charlie    1980-10-05   45\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "data = {'Name': ['Alice', 'Bob', 'Charlie', 'Alice', 'Bob'],\n",
        "        'Subject': ['Math', 'Science', 'Math', 'Science', 'Math'],\n",
        "        'Score': [85, 90, 88, 92, 78]}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "grouped_df = df.groupby('Name')['Score'].mean().reset_index()\n",
        "print(grouped_df)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jGTujL_ffBbO",
        "outputId": "acb6527e-ffc5-40f2-b6ce-624f04a2bbaa"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "      Name  Score\n",
            "0    Alice   88.5\n",
            "1      Bob   84.0\n",
            "2  Charlie   88.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "data = {'Name': ['Alice', 'Bob', 'Charlie', 'Alice', 'Bob'],\n",
        "        'Subject': ['Math', 'Science', 'Math', 'Science', 'Math'],\n",
        "        'Score': [85, 90, 88, 92, 78]}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "\n",
        "pivot_table = pd.pivot_table(df, values='Score', index='Name', columns='Subject', aggfunc='mean')\n",
        "print(pivot_table)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6Otca5-RfIWF",
        "outputId": "18c3764b-81a0-4f58-f939-922c4e7b9f44"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Subject  Math  Science\n",
            "Name                  \n",
            "Alice    85.0     92.0\n",
            "Bob      78.0     90.0\n",
            "Charlie  88.0      NaN\n"
          ]
        }
      ]
    }
  ]
}